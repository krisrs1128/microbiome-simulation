[{"path":"index.html","id":"introduction","chapter":"1 Introduction","heading":"1 Introduction","text":"website accompanies review\nSemisynthetic Simulation Microbiome Analysis. examples discussed \ncase studies can reproduced running code , \nalso included additional introductory material packages simplify\nanalysis.","code":""},{"path":"index.html","id":"setup","chapter":"1 Introduction","heading":"1.1 Setup","text":"MIGsim package provides wrapper functions use\nthroughout book. can install running:block loads packages used book.","code":"\ndevtools::install_github(\"krisrs1128/intro-to-simulation/MIGsim\")\nsuppressPackageStartupMessages({\n  library(CovTools)\n  library(SpiecEasi)\n  library(SummarizedExperiment)\n  library(dplyr)\n  library(forcats)\n  library(gamboostLSS)\n  library(ggdist)\n  library(ggplot2)\n  library(glue)\n  library(mixOmics)\n  library(mutoss)\n  library(patchwork)\n  library(pwr)\n  library(scico)\n  library(splines)\n  library(tibble)\n  library(tidyr)\n  library(MIGsim)\n  library(purrr)\n  library(scDesigner)\n})\ntheme_set(theme_classic() + theme(rect = element_rect(fill = \"transparent\")))"},{"path":"index.html","id":"using-summarizedexperiment","chapter":"1 Introduction","heading":"1.2 Using SummarizedExperiment","text":"SummarizedExperiment data structures simplify manipulation sequencing\nexperiments, ’ll using throughout tutorials. example,\ndistinguish molecule counts, stored assay slot,\nsample descriptors, stored colData. time, \nseparate components nicely synchronized. example, subsetting samples\none tables automatically subsets .line loads small subset genera \nAtlas experiment, \nprofiled gut microbiomes 1006 healthy adults Western Europe.Exercise: practice working SummarizedExperiment\nobjects, try answering:many genera available experiment object?common phylum dataset?average participant age?average abundance Allistipes et rel. among people obese BMI group?Hint: important functions assay(), rowData(), colData().Solution","code":"\ndata(atlas)\ntable(rowData(atlas)$Phylum)## \n## Actinobacteria  Bacteroidetes     Firmicutes \n##              1              2             21\nmean(atlas$age)## [1] 45.15629\nix <- colData(atlas)$bmi_group == \"obese\"\nabundances <- assay(atlas)\nrowMeans(abundances[, ix])##                   Allistipes et rel.          Anaerostipes caccae et rel.         Bacteroides vulgatus et rel. \n##                            289.85263                            123.84211                           1235.44211 \n##                      Bifidobacterium     Bryantella formatexigens et rel.       Butyrivibrio crossotus et rel. \n##                            120.72982                            137.74737                            188.54035 \n##        Clostridium cellulosi et rel.           Clostridium leptum et rel.           Clostridium nexile et rel. \n##                            437.13684                            129.88070                             73.69474 \n##     Clostridium orbiscindens et rel.       Clostridium sphenoides et rel.        Clostridium symbiosum et rel. \n##                            231.82807                            139.35439                            331.90175 \n##         Coprococcus eutactus et rel.        Dorea formicigenerans et rel.    Lachnospira pectinoschiza et rel. \n##                            222.15088                            176.07368                            127.75439 \n##   Oscillospira guillermondii et rel. Outgrouping clostridium cluster XIVa          Ruminococcus bromii et rel. \n##                           1560.27368                             91.93684                            100.09123 \n##        Ruminococcus callidus et rel.           Ruminococcus obeum et rel.       Sporobacter termitidis et rel. \n##                            103.61754                            449.28421                            423.71579 \n##     Subdoligranulum variable at rel.           Uncultured Clostridiales I          Uncultured Clostridiales II \n##                            442.34737                            191.28772                            152.83509\nnrow(atlas)## [1] 24\ntable(rowData(atlas)$Phylum)## \n## Actinobacteria  Bacteroidetes     Firmicutes \n##              1              2             21\nmean(atlas$age)## [1] 45.15629\natlas[, atlas$bmi_group == \"obese\"] |>\n  assay() |>\n  rowMeans()##                   Allistipes et rel.          Anaerostipes caccae et rel.         Bacteroides vulgatus et rel. \n##                            289.85263                            123.84211                           1235.44211 \n##                      Bifidobacterium     Bryantella formatexigens et rel.       Butyrivibrio crossotus et rel. \n##                            120.72982                            137.74737                            188.54035 \n##        Clostridium cellulosi et rel.           Clostridium leptum et rel.           Clostridium nexile et rel. \n##                            437.13684                            129.88070                             73.69474 \n##     Clostridium orbiscindens et rel.       Clostridium sphenoides et rel.        Clostridium symbiosum et rel. \n##                            231.82807                            139.35439                            331.90175 \n##         Coprococcus eutactus et rel.        Dorea formicigenerans et rel.    Lachnospira pectinoschiza et rel. \n##                            222.15088                            176.07368                            127.75439 \n##   Oscillospira guillermondii et rel. Outgrouping clostridium cluster XIVa          Ruminococcus bromii et rel. \n##                           1560.27368                             91.93684                            100.09123 \n##        Ruminococcus callidus et rel.           Ruminococcus obeum et rel.       Sporobacter termitidis et rel. \n##                            103.61754                            449.28421                            423.71579 \n##     Subdoligranulum variable at rel.           Uncultured Clostridiales I          Uncultured Clostridiales II \n##                            442.34737                            191.28772                            152.83509"},{"path":"index.html","id":"warm-up-a-gaussian-example","chapter":"1 Introduction","heading":"1.3 Warm-up: A Gaussian Example","text":"’s toy dataset illustrate main idea GAMLSS. panel \nplot represents different feature (e.g., taxon, gene, metabolite…).\nabundance varies smoothly time, first three panels, \ntrends differ group assignment.can try approximate data new simulator. setup_simulator\ncommand takes template SummarizedExperiment object first argument.\nsecond gives R formula syntax-style specification GAMLSS parameters\n(mean SD, case) dependence sample properties. last argument\ngives type model fit, case, Gaussian location-shape-scale\nmodel.Exercise: Right now, panel allows interaction trend \ngroup type. Can define simulator groups effect \ntrends first two panels? basis defining synthetic\nnegative controls.Solution: can modify formula longer interaction\ngroup. just need remove * group original formula updated\nlink function. ensure applies first two panels, use\n1:2 first argument mutate. first argument specifies \nfeatures apply new formula .","code":"\ndata(exper_ts)\nexper_lineplot(exper_ts)## Warning: Removed 12 rows containing missing values or values outside the scale range (`geom_point()`).\nsim <- setup_simulator(exper_ts, ~ ns(time, df = 7) * group, ~ GaussianLSS()) |>\n  estimate(nu = 0.01, mstop = 1000)\n\nsample(sim) |>\n  exper_lineplot()## Warning: Removed 4 rows containing missing values or values outside the scale range (`geom_point()`).\nsim <- sim |>\n  scDesigner::mutate(\n    1:2,\n    link = ~ ns(time, df = 7)\n  ) |>\n  estimate(nu = 0.01, mstop = 1000)\n\nsample(sim) |>\n  exper_lineplot()\nsim <- sim |>\n  mutate(1:2, link = ~ ns(time, df = 7)) |>\n  estimate(nu = 0.01, mstop = 1000)\n\nsample(sim) |>\n  exper_lineplot()## Warning: Removed 4 rows containing missing values or values outside the scale range (`geom_point()`).\nsessionInfo()## R version 4.4.1 Patched (2024-08-21 r87049)\n## Platform: aarch64-apple-darwin20\n## Running under: macOS Sonoma 14.5\n## \n## Matrix products: default\n## BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib \n## LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0\n## \n## locale:\n## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n## \n## time zone: America/Chicago\n## tzcode source: internal\n## \n## attached base packages:\n##  [1] splines   parallel  stats4    stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n##  [1] tidyr_1.3.1                     tibble_3.2.1                    scico_1.5.0                    \n##  [4] pwr_1.3-0                       patchwork_1.3.0                 mutoss_0.1-13                  \n##  [7] mvtnorm_1.3-1                   forcats_1.0.0                   SpiecEasi_1.1.3                \n## [10] CovTools_0.5.4                  TreeSummarizedExperiment_2.13.0 Biostrings_2.73.1              \n## [13] XVector_0.45.0                  SingleCellExperiment_1.27.2     scDesigner_0.0.0.9000          \n## [16] MIGsim_0.0.0.9000               purrr_1.0.2                     mixOmics_6.29.0                \n## [19] lattice_0.22-6                  MASS_7.3-61                     glue_1.7.0                     \n## [22] ggplot2_3.5.1                   ggdist_3.3.2                    gamboostLSS_2.0-7              \n## [25] mboost_2.9-11                   stabs_0.6-4                     dplyr_1.1.4                    \n## [28] SummarizedExperiment_1.35.1     Biobase_2.65.1                  GenomicRanges_1.57.1           \n## [31] GenomeInfoDb_1.41.1             IRanges_2.39.2                  S4Vectors_0.43.2               \n## [34] BiocGenerics_0.51.1             MatrixGenerics_1.17.0           matrixStats_1.4.1              \n## \n## loaded via a namespace (and not attached):\n##   [1] minpack.lm_1.2-4        rpart_4.1.23            lifecycle_1.0.4         Rdpack_2.6.1           \n##   [5] edgeR_4.3.16            doParallel_1.0.17       insight_0.20.4          magrittr_2.0.3         \n##   [9] limma_3.61.10           sass_0.4.9              rmarkdown_2.28          plotrix_3.8-4          \n##  [13] jquerylib_0.1.4         yaml_2.3.10             RColorBrewer_1.1-3      ADGofTest_0.3          \n##  [17] multcomp_1.4-26         abind_1.4-8             zlibbioc_1.51.1         expm_1.0-0             \n##  [21] quadprog_1.5-8          downlit_0.4.4           pspline_1.0-20          kde1d_1.0.7            \n##  [25] TH.data_1.1-2           rgl_1.3.1               yulab.utils_0.1.7       pracma_2.4.4           \n##  [29] sandwich_3.1-1          GenomeInfoDbData_1.2.12 ggrepel_0.9.6           tidytree_0.4.6         \n##  [33] ellipse_0.5.0           RSpectra_0.16-2         codetools_0.2-20        DelayedArray_0.31.11   \n##  [37] xml2_1.3.6              shapes_1.2.7            tidyselect_1.2.1        shape_1.4.6.1          \n##  [41] UCSC.utils_1.1.0        farver_2.1.2            randtoolbox_2.0.4       base64enc_0.1-3        \n##  [45] jsonlite_1.8.9          multtest_2.61.0         Formula_1.2-5           survival_3.7-0         \n##  [49] iterators_1.0.14        foreach_1.5.2           tools_4.4.1             progress_1.2.3         \n##  [53] treeio_1.29.1           Rcpp_1.0.13             rARPACK_0.11-0          gridExtra_2.3          \n##  [57] Rttf2pt1_1.3.12         SparseArray_1.5.38      xfun_0.47               distributional_0.5.0   \n##  [61] withr_3.0.1             numDeriv_2016.8-1.1     fastmap_1.2.0           fansi_1.0.6            \n##  [65] digest_0.6.37           R6_2.5.1                colorspace_2.1-1        inum_1.0-5             \n##  [69] copula_1.1-4            flare_1.7.0.1           utf8_1.2.4              generics_0.1.3         \n##  [73] corpcor_1.6.10          prettyunits_1.2.0       pulsar_0.3.11           httr_1.4.7             \n##  [77] htmlwidgets_1.6.4       S4Arrays_1.5.8          scatterplot3d_0.3-44    rngWELL_0.10-9         \n##  [81] pkgconfig_2.0.3         geigen_2.3              gtable_0.3.5            pcaPP_2.0-5            \n##  [85] htmltools_0.5.8.1       bookdown_0.40           scales_1.3.0            SHT_0.1.8              \n##  [89] knitr_1.48              rstudioapi_0.16.0       reshape2_1.4.4          nlme_3.1-166           \n##  [93] zoo_1.8-12              cachem_1.1.0            stringr_1.5.1           libcoin_1.0-10         \n##  [97] extrafont_0.19          pillar_1.9.0            grid_4.4.1              vctrs_0.6.5            \n## [101] VGAM_1.1-12             huge_1.3.5              extrafontdb_1.0         gamlss.dist_6.1-1      \n## [105] evaluate_1.0.0          cli_3.6.3               locfit_1.5-9.10         compiler_4.4.1         \n## [109] rlang_1.1.4             crayon_1.5.3            labeling_0.4.3          plyr_1.8.9             \n## [113] fs_1.6.4                stringi_1.8.4           BiocParallel_1.39.0     nnls_1.5               \n## [117] assertthat_0.2.1        rvinecopulib_0.6.3.1.1  munsell_0.5.1           gsl_2.1-8              \n## [121] lazyeval_0.2.2          glmnet_4.1-8            Matrix_1.7-0            hms_1.1.3              \n## [125] stabledist_0.7-2        statmod_1.5.0           highr_0.11              rbibutils_2.2.16       \n## [129] partykit_1.2-22         igraph_2.0.3            memoise_2.0.1           bslib_0.8.0            \n## [133] ape_5.8"},{"path":"simulating-differential-abundance.html","id":"simulating-differential-abundance","chapter":"2 Simulating Differential Abundance","heading":"2 Simulating Differential Abundance","text":"consider simulating entire microbial communities, complex\ncorrelation structures, let’s learn simulators individual taxa. \nalready enough analyze taxon-level differential abundance approaches. \nexample, end session, ’ll apply simulator study power\nfalse discovery rate limma-voom applied microbiome data (\nopposed bulk RNA-seq data originally proposed). Also,\nmarginal modeling first step towards multivariate (community-wide)\nmodeling, ’ll explore next session.Let’s load necessary packages. Instructions scDesigner MIGsim\ncan found pre-workshop announcement. SummarizedExperiment \nBioconductor, packages CRAN.Let’s train simulator fit Atlas dataset. ’ll use two\ncovariates. bmi_group main covariate interest – want see \nmicrobiome composition varies among people different BMI. log_depth\nterm used adjust differential sequencing depths. found helpful\nfixed zero inflation across population (nu), set nu = ~1.\nFinally, since want eventually evaluate testing methods designed\ncount data, used (Z)ero ()nflated (N)egative (B)inomial\nlocation-shape-scale model.","code":"\ndata(atlas)\n\nfmla <- list(\n  mu = ~ bmi_group + log_depth,\n  sigma = ~ bmi_group + log_depth,\n  nu = ~1\n)\nsim <- setup_simulator(atlas, fmla, ~ ZINBLSS()) |>\n  estimate(nu = 0.01, mstop = 1000)"},{"path":"simulating-differential-abundance.html","id":"critique","chapter":"2 Simulating Differential Abundance","heading":"2.1 Critique","text":"Exercise: block combines real simulated experiments \nvisualizes difference. neighbors, discuss well simulator\napproximates original template.Solution: clearest difference , abundant taxa, \nmany low zero counts. contrast, simulated data tend long\nleft tail (many outlier circles left side boxplots),\nreflecting fact samples negative binomial distribution usually\nsupport counts \\(\\geq 0\\). Nonetheless, ordering abundances\ngroups typically agrees real simulated data. \ninterquartile ranges taxon also seem roughly match.","code":"\ncombined <- bind_rows(\n  real = pivot_experiment(atlas), # real data\n  simulated = pivot_experiment(sample(sim)), # simulated\n  .id = \"source\"\n)\n\nggplot(combined) +\n  geom_boxplot(\n    aes(value, reorder(feature, value, median), fill = bmi_group)\n  ) +\n  scale_x_sqrt() +\n  facet_grid(. ~ source)"},{"path":"simulating-differential-abundance.html","id":"power-analysis-loop","chapter":"2 Simulating Differential Abundance","heading":"2.2 Power Analysis Loop","text":"run power analysis, need define datasets known ground\ntruth. , can run differential abundance methods want see \nmany true associations recovered (many nulls falsely\nrejected). end, ’ll remove associations 16 original 24\ngenera, just like removed group interactions spline fits . ’ll\nchoose remove 16 weakest associations original data.\nhelpful , even use bmi_group formula, \nreality (weak) effect, even simulator considers\ntrue signal, difference may hard detect. Eventually, \npackage include functions modifying effects directly; \npoint, though, can indirectly modify parameters re-estimating \nnew formulas.Now ground truth associations, ’ll evaluate LIMMA-voom \ndifferential analysis. consider sample sizes ranging 50 1200, \nsimulate 10 datasets sample size.Exercise: Visualize results. interpret results \npower analysis? Based earlier critique simulator, think\nestimated power conservative, liberal, right?Solution: ’ll use stat_pointinterval function ggdist package \nvisualize range empirical power estimates across sample sizes. can see\naverage false discovery proportion always controlled 0.3,\nthough variance proportion can quite high. can also see \nquite good power \\(n \\geq 625\\) samples, worst case\nscenarios can quite poor anything fewer samples.expect result somewhat conservative. \noriginal data symmetric distributions simulation, limma’s\ntransformation normality likely easier accomplish \nhighly skewed data.","code":"\nnulls <- differential_analysis(atlas, \"LIMMA_voom\") |>\n  rownames() |>\n  tail(16)\n\nnull_fmla <- list(mu = ~log_depth, sigma = ~log_depth, nu = ~1)\nsim <- sim |>\n  mutate(any_of(nulls), link = null_fmla) |>\n  estimate(nu = 0.01, mstop = 1000)\nconfig <- expand.grid(\n  sample_size = floor(seq(50, 1200, length.out = 5)),\n  n_rep = 1:10\n) |>\n  mutate(run = as.character(row_number()))\n\nresults <- list()\nfor (i in seq_len(nrow(config))) {\n  atlas_ <- sample_n(sim, config$sample_size[i])\n  results[[i]] <- differential_analysis(atlas_, \"LIMMA_voom\") |>\n    da_metrics(nulls, level = 0.3)\n  print(glue(\"{i}/{nrow(config)}\"))\n}## 1/50\n## 2/50\n## 3/50\n## 4/50\n## 5/50\n## 6/50\n## 7/50\n## 8/50\n## 9/50\n## 10/50\n## 11/50\n## 12/50\n## 13/50\n## 14/50\n## 15/50\n## 16/50\n## 17/50\n## 18/50\n## 19/50\n## 20/50\n## 21/50\n## 22/50\n## 23/50\n## 24/50\n## 25/50\n## 26/50\n## 27/50\n## 28/50\n## 29/50\n## 30/50\n## 31/50\n## 32/50\n## 33/50\n## 34/50\n## 35/50\n## 36/50\n## 37/50\n## 38/50\n## 39/50\n## 40/50\n## 41/50\n## 42/50\n## 43/50\n## 44/50\n## 45/50\n## 46/50\n## 47/50\n## 48/50\n## 49/50\n## 50/50\nbind_rows(results, .id = \"run\") |>\n  left_join(config) |>\n  ggplot() +\n  stat_pointinterval(aes(factor(sample_size), value)) +\n  facet_wrap(~metric, scales = \"free\")\nsessionInfo()## R version 4.4.0 (2024-04-24)\n## Platform: aarch64-apple-darwin20\n## Running under: macOS Ventura 13.4\n## \n## Matrix products: default\n## BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib \n## LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0\n## \n## locale:\n## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n## \n## time zone: America/Los_Angeles\n## tzcode source: internal\n## \n## attached base packages:\n##  [1] splines   parallel  stats4    stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n##  [1] TreeSummarizedExperiment_2.12.0 Biostrings_2.72.1               XVector_0.44.0                  SingleCellExperiment_1.26.0     scDesigner_0.0.0.9000           purrr_1.0.2                    \n##  [7] MIGsim_0.0.0.9000               tidyr_1.3.1                     tibble_3.2.1                    scico_1.5.0                     pwr_1.3-0                       patchwork_1.2.0                \n## [13] mutoss_0.1-13                   mvtnorm_1.2-5                   mixOmics_6.28.0                 lattice_0.22-6                  MASS_7.3-60.2                   glue_1.7.0                     \n## [19] ggplot2_3.5.1                   ggdist_3.3.2                    gamboostLSS_2.0-7               mboost_2.9-10                   stabs_0.6-4                     forcats_1.0.0                  \n## [25] dplyr_1.1.4                     SummarizedExperiment_1.34.0     Biobase_2.64.0                  GenomicRanges_1.56.0            GenomeInfoDb_1.40.0             IRanges_2.38.0                 \n## [31] S4Vectors_0.42.0                BiocGenerics_0.50.0             MatrixGenerics_1.16.0           matrixStats_1.3.0               SpiecEasi_1.1.3                 CovTools_0.5.4                 \n## \n## loaded via a namespace (and not attached):\n##   [1] minpack.lm_1.2-4        rpart_4.1.23            lifecycle_1.0.4         Rdpack_2.6              edgeR_4.2.0             doParallel_1.0.17       insight_0.20.1          magrittr_2.0.3         \n##   [9] limma_3.60.2            sass_0.4.9              rmarkdown_2.27          jquerylib_0.1.4         yaml_2.3.9              plotrix_3.8-4           RColorBrewer_1.1-3      ADGofTest_0.3          \n##  [17] multcomp_1.4-25         abind_1.4-5             zlibbioc_1.50.0         expm_0.999-9            quadprog_1.5-8          pspline_1.0-20          kde1d_1.0.7             yulab.utils_0.1.4      \n##  [25] rgl_1.3.1               pracma_2.4.4            TH.data_1.1-2           sandwich_3.1-0          GenomeInfoDbData_1.2.12 ggrepel_0.9.5           tidytree_0.4.6          ellipse_0.5.0          \n##  [33] RSpectra_0.16-1         codetools_0.2-20        DelayedArray_0.30.1     shapes_1.2.7            tidyselect_1.2.1        shape_1.4.6.1           farver_2.1.2            UCSC.utils_1.0.0       \n##  [41] randtoolbox_2.0.4       base64enc_0.1-3         jsonlite_1.8.8          multtest_2.60.0         Formula_1.2-5           survival_3.7-0          iterators_1.0.14        foreach_1.5.2          \n##  [49] tools_4.4.0             progress_1.2.3          treeio_1.28.0           Rcpp_1.0.12             rARPACK_0.11-0          gridExtra_2.3           SparseArray_1.4.8       xfun_0.45              \n##  [57] distributional_0.4.0    withr_3.0.0             numDeriv_2016.8-1.1     fastmap_1.2.0           fansi_1.0.6             digest_0.6.36           R6_2.5.1                colorspace_2.1-0       \n##  [65] inum_1.0-5              copula_1.1-3            flare_1.7.0.1           utf8_1.2.4              generics_0.1.3          corpcor_1.6.10          prettyunits_1.2.0       pulsar_0.3.11          \n##  [73] httr_1.4.7              htmlwidgets_1.6.4       S4Arrays_1.4.1          scatterplot3d_0.3-44    rngWELL_0.10-9          pkgconfig_2.0.3         geigen_2.3              gtable_0.3.5           \n##  [81] pcaPP_2.0-4             htmltools_0.5.8.1       bookdown_0.39.1         scales_1.3.0            SHT_0.1.8               knitr_1.47              rstudioapi_0.16.0       reshape2_1.4.4         \n##  [89] nlme_3.1-164            cachem_1.1.0            zoo_1.8-12              stringr_1.5.1           libcoin_1.0-10          pillar_1.9.0            grid_4.4.0              vctrs_0.6.5            \n##  [97] VGAM_1.1-11             huge_1.3.5              gamlss.dist_6.1-1       evaluate_0.24.0         cli_3.6.3               locfit_1.5-9.9          compiler_4.4.0          rlang_1.1.4            \n## [105] crayon_1.5.3            labeling_0.4.3          fs_1.6.4                plyr_1.8.9              stringi_1.8.4           BiocParallel_1.38.0     nnls_1.5                assertthat_0.2.1       \n## [113] rvinecopulib_0.6.3.1.1  munsell_0.5.1           gsl_2.1-8               lazyeval_0.2.2          glmnet_4.1-8            Matrix_1.7-0            hms_1.1.3               stabledist_0.7-1       \n## [121] statmod_1.5.0           highr_0.11              rbibutils_2.2.16        memoise_2.0.1           partykit_1.2-20         igraph_2.0.3            bslib_0.7.0.9000        ape_5.8"},{"path":"multivariate-power-analysis.html","id":"multivariate-power-analysis","chapter":"3 Multivariate Power Analysis","heading":"3 Multivariate Power Analysis","text":"can choose sample sizes complex bioinformatic workflows, \nsimultaneously analyze many features (taxa, genes, metabolites) concert?\ntraditional, analytical power analysis often breaks , simulation can\nstill effective. ’ll look concrete case study try choose \ngood sample size sparse partial least squares discriminant analysis\n(sPLS-DA) Type Diabetes (T1D) gut microbiome.First, ’ll load required packages. Relative first session, \nadditional package need mixOmics. can installed using\nBiocManager::install('mixOmics').","code":""},{"path":"multivariate-power-analysis.html","id":"interpreting-pls-da","chapter":"3 Multivariate Power Analysis","heading":"3.1 Interpreting PLS-DA","text":"T1D dataset describes 427 metabolites gut microbiomes 40\nT1D patients 61 healthy controls. data originally gathered \nGavin et al. (2018), motivated \nrelationship pancreas intestinal issues often experienced \nT1D patients. especially curious whether microbime-associated\nproteins might related increased risk T1D development.output care PLD-DA scores loadings. wrapper\ndirectly gives us output without explicitly set\nhyerparameters, though can look \nsee function defined.Exercise: Discuss output plotIndiv. plotVar shape\ninterpretation?Solution: first two dimensions sPLS-DA pick distinctions T1D\n(orange) control (blue) groups. variance first two dimensions\nrelatively small\n– variation protein signatures may easiliy captured two dimensions\nmay generally correlated disease response. Since \ndifferences groups captured first dimension, can look \nfeatures highly correlated dimension see proteins\nmight driving difference. example, can conclude T1D samples\ntend higher levels \np21333 \nq8wz42 compared \ncontrols.","code":"\ndata(t1d)\nresult <- splsda_fit(t1d)\nplotIndiv(result$fit, cex = 5)\nplotVar(result$fit, cutoff = 0.4, cex = 5)"},{"path":"multivariate-power-analysis.html","id":"estimation","chapter":"3 Multivariate Power Analysis","heading":"3.2 Estimation","text":"Let’s estimate simulator every protein allowed ot vary across T1D\ntype. Since data already centered log-ratio transformed, ’s okay\ntreat Gaussian.","code":"\nsimulator <- setup_simulator(t1d, link_formula = ~outcome2, family = ~ GaussianLSS()) |>\n  estimate(mstop = 100)"},{"path":"multivariate-power-analysis.html","id":"evaluation","chapter":"3 Multivariate Power Analysis","heading":"3.3 Evaluation","text":"Last time, saw visualize marginal simulator quality. can \ntell whether joint simulator working, though? One simple check \nanalyze pairwise correlations. Since copula model designed capture\nsecond-order moments, least effectively capture \ncorrelations.’ve written small helper visualizes pairwise protein-protein\ncorrelations real simulated datasets. seem often\noverestimating correlation strength. likely consequence \nhigh-dimensionality problem.Exercise: address , let’s try modifying copula_def argument \nsetup_simulator use suitable simulator. Generate new correlation\nhistograms comment changes observe. need modify \ncommented lines (#) lines block .Solution: coupla, can use covariance estimator Cai Liu\n(2011), \nsuited high dimensions. Larger values thr increase stability\nestimates, cost potentially missing weakening true\ncorrelations. line point, new simulated correlations \nconcentrated.choose threshold? can compare correlations \nsystematically using loop:","code":"\nsim_exper <- sample(simulator)\ncorrelation_hist(t1d, sim_exper)\nsimulator <- setup_simulator(\n  t1d,\n  link_formula = ~outcome2,\n  family = ~ GaussianLSS(),\n  copula_def = # fill this code in\n  ) |>\n  estimate(mstop = 100)\n\nsim_exper <- sample(simulator) # and then run these two lines\ncorrelation_hist(t1d, sim_exper) #\nsimulator <- setup_simulator(\n  t1d,\n  link_formula = ~outcome2,\n  family = ~ GaussianLSS(),\n  copula_def = copula_adaptive(thr = 0.1)\n) |>\n  estimate(mstop = 100)\n\nsim_exper <- sample(simulator)\ncorrelation_hist(t1d, sim_exper)\ncontrast_boxplot(t1d, sim_exper, ~. ~ reorder(outcome2, value))\nrhos <- list(sim = cor(t(assay(sim_exper))), real = cor(t(assay(t1d))))\ndiag(rhos[[1]]) <- NA\ntop_cors <- which(abs(rhos[[1]]) > quantile(abs(rhos[[1]]), 0.999, na.rm = TRUE), arr.ind = TRUE)\n\npairs_data <- list(\n  real = subset_correlated(assay(t1d), top_cors),\n  simulated = subset_correlated(assay(sim_exper), top_cors)\n) |>\n  bind_rows(.id = \"source\")\n\nkeep_pairs <- pairs_data |>\n  dplyr::select(source, pair, correlation) |>\n  unique() |>\n  filter(source == \"real\", correlation > 0.72, correlation < 0.8) |>\n  pull(pair)\n\np1 <- pairs_data |>\n  filter(pair %in% keep_pairs) |>\n  ggplot() +\n  geom_point(aes(feature1, feature2, col = source), alpha = 0.5, size = 1) +\n  scale_color_manual(values = c(\"#038C8C\", \"#D93636\")) +\n  guides(color = guide_legend(override.aes = list(alpha = 1, size = 2))) +\n  labs(title = \"A\", col = \"Source\", x = expression(\"Feature\" ~ j), y = expression(\"Feature\" ~ j^\"'\")) +\n  facet_wrap(~ reorder(pair, -correlation), ncol = 6, scales = \"free\") +\n  theme(\n    strip.text = element_text(size = 7),\n    axis.text = element_text(size = 8)\n  )\nft_order <- hclust(dist(assay(t1d)))$order\np2 <- correlation_heatmap(rhos$real, ft_order) +\n  labs(title = \"B  Real\") +\n  (correlation_heatmap(rhos$sim, ft_order) +\n    labs(title = \"Simulated\") +\n    theme(legend.position = \"none\"))\n\n(p1 / p2) +\n  plot_layout(guides = \"collect\", heights = c(1.2, 2))\nbivariate_metrics <- \\(thr, n_rep = 5) {\n  # refit the simulator with current threshold\n  simulator <- setup_simulator(\n    t1d,\n    link_formula = ~outcome2,\n    family = ~ GaussianLSS(),\n    copula_def = copula_adaptive(thr = thr)\n  ) |>\n    estimate(mstop = 100)\n\n  # compute metrics on five samples\n  err <- list()\n  for (i in 1:n_rep) {\n    sim_exper <- sample(simulator)[rownames(t1d), ]\n    rhos <- list(sim = cor(t(assay(sim_exper))), real = cor(t(assay(t1d))))\n    err[[i]] <- data.frame(\n      frobenius = sqrt(mean((rhos$sim - rhos$real)^2)),\n      ks = ks.test(rhos$sim, rhos$real)$statistic,\n      thr = thr\n    )\n  }\n\n  do.call(rbind, err)\n}\nerrors <- seq(.001, 0.2, length.out = 10) |>\n  map_dfr(bivariate_metrics) |>\n  pivot_longer(-thr, names_to = \"metric\")\n\nggplot(errors) +\n  geom_point(aes(thr, value)) +\n  facet_wrap(~metric, scales = \"free_y\") +\n  labs(x = \"Threshold\", y = \"Metric Value\")"},{"path":"multivariate-power-analysis.html","id":"pls-da-power-analysis","chapter":"3 Multivariate Power Analysis","heading":"3.4 PLS-DA Power Analysis","text":"Now simulator, can run power analysis. theory, \nlook summary PLS-DA output varies sample size\nincreases. natural one, though, simply see classifier\nperformance improves gather samples. Specifically, ’ll measure \nholdout Area Curve (auc), measure well trains PLS-DA\nclassifier balance precision recall new samples.Moreover, ’ll study effect sparsity – happens many features\nrelationship response? ’ll also simulate three\nhypothetical datasets sample size sparsity level. \nconfigurations interest stored config matrix .Exercise: Finally, ’re position generate synthetic data \nevaluate PLS-DA performance. Fill block update simulator \n. Remember original simulator defined assumes \nproteins associated T1D. can use t1d_order prioritize \nproteins strongest effects original data. , \nneed modify line marked comments (#).Solution: define nulls, mutate weakest proteins longer \nassociation T1D: link = ~ 1 instead link = ~ outcome2. speed \ncomputation, organized mutate calls don’t need \nre-estimate proteins whose effects removed previous iteration.:::can visualize variation performance.Discussion: Interpret visualization . think analysis\nlike help justify making experimental investments \nothers?Solution: Reading across facets top left bottom right, power decreases \nnumber null proteins increases. seems sPLS-DA can benefit \nmany weakly associated features. power sometimes high low sample\nsizes, variance can quite large. settings, noticeable\ndecrease variance power go 15 48 samples. can assume\nmoderate fraction (> 15%) measured proteins associated T1D,\nmay already achieve good power ~ 100 samples. However, \nimagine effect might sparser future experiment, figure\ngive us good justification arguing larger number samples, \norder ensure can discover disease-associated proteomics signature.","code":"\nconfig <- expand.grid(\n  sample_size = floor(seq(20, 200, length.out = 5)),\n  n_rep = 1:20,\n  n_null = floor(seq(317, 417, length.out = 4)),\n  metrics = NA\n)\n\ndata(t1d_order)\nfor (i in seq_len(nrow(config))) {\n  simulator <- simulator |>\n    mutate(\n      # fill this in\n    ) |>\n    estimate(mstop = 100)\n\n  config$metrics[i] <- (sample_n(simulator, config$sample_size[i]) |>\n    splsda_fit())[[\"auc\"]]\n  print(glue(\"run {i}/{nrow(config)}\"))\n}\nfor (i in seq_len(nrow(config))) {\n  if (i == 1 || config$n_null[i] != config$n_null[i - 1]) {\n    simulator <- simulator |>\n      mutate(any_of(rev(t1d_order)[1:config$n_null[i]]), link = ~1) |>\n      estimate(mstop = 100)\n  }\n\n  config$metrics[i] <- (sample_n(simulator, config$sample_size[i]) |>\n    splsda_fit())[[\"auc\"]]\n  print(glue(\"run {i}/{nrow(config)}\"))\n}\nconfig <- readRDS(url(\"https://uwmadison.box.com/shared/static/tf1xyo7a2n2rd2ms4y9itaev42dsnp5c.rds\"))\np3 <- ggplot(config, aes(factor(sample_size), metrics, col = factor(n_null))) +\n  stat_pointinterval(position = \"dodge\") +\n  scale_color_scico_d(palette = \"managua\") +\n  labs(x = \"Sample Size\", y = \"AUC\", color = \"# Nulls\", title = \"C\")\n\n(p1 / p2 / p3) +\n  plot_layout(guides = \"collect\", heights = c(1.2, 2, 1))\nix <- colData(t1d)$outcome2 == \"T1D\"\np_vals <- apply(assay(t1d), 1, \\(x) t.test(x[ix], x[-ix])$p.value)\nstorey_pi0_est(p_vals, 0.5)$pi0## [1] 1.311475"},{"path":"multivariate-power-analysis.html","id":"comparison-with-t-test-calculation","chapter":"3 Multivariate Power Analysis","heading":"3.5 Comparison with \\(t\\)-test calculation","text":"based power analysis using theory \\(t\\)-tests? might \nhopeful theory might give sample size also good enough \nsPLS-DA. make concrete, suppose test 427 taxa using\ntwo-sample \\(t\\)-test Benjamini-Hochberg correction multiple testing.\nSuppose sparse case, 10 nonnull taxa. \nhypothetical true signal strength, use observed signal strength \ntenth significant taxon real data,many samples need order achieve 80% power setting?\nAccounting multiple testing, need taxon significant \nlevel \\(\\frac{10 \\alpha}{427}\\), gives us,, according power analysis, need 11 samples \nhealthy disease groups. comparison earlier analysis using sPLS-DA,\noptimistic. case 10 taxa significant, \n20 samples total, AUC range \\(\\left[\\right]\\), \nslightly better random guessing. case \\(t\\)-test power\ncalculation make us overoptimistic number samples \nrequired. data generation (two shifted normal distributions) \nanalysis (\\(t\\)-tests BH correction) mechanisms assumed power\nanalysis suspect, case makes difference. power analysis\nrequires simplification, fact realistic simulator\npoints us towards noticeably larger sample sizes indication \ntrust \\(t\\)-test calculation instead suggest larger sample sample\nsPLS-DA specific analysis.","code":"\nsubset_size <- 10\ny <- colData(t1d)$outcome2\nx <- assay(t1d)[t1d_order[subset_size], ]\ntest_result <- t.test(x[y == \"T1D\"], x[y == \"healthy\"])\nsignal_strength <- test_result$statistic\nsignal_strength##         t \n## -2.092196\nresult <- pwr.t.test(power = 0.8, d = signal_strength, sig.level = 0.05 * subset_size / nrow(t1d))\nresult$n## [1] 10.36249\nsessionInfo()## R version 4.4.0 (2024-04-24)\n## Platform: aarch64-apple-darwin20\n## Running under: macOS Ventura 13.4\n## \n## Matrix products: default\n## BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib \n## LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0\n## \n## locale:\n## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n## \n## time zone: America/Chicago\n## tzcode source: internal\n## \n## attached base packages:\n##  [1] splines   parallel  stats4    stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n##  [1] TreeSummarizedExperiment_2.12.0 Biostrings_2.72.1               XVector_0.44.0                  SingleCellExperiment_1.26.0     scDesigner_0.0.0.9000           purrr_1.0.2                    \n##  [7] MIGsim_0.0.0.9000               tidyr_1.3.1                     tibble_3.2.1                    scico_1.5.0                     pwr_1.3-0                       patchwork_1.2.0                \n## [13] mixOmics_6.28.0                 lattice_0.22-6                  MASS_7.3-60.2                   glue_1.7.0                      ggplot2_3.5.1                   ggdist_3.3.2                   \n## [19] gamboostLSS_2.0-7               mboost_2.9-10                   stabs_0.6-4                     forcats_1.0.0                   dplyr_1.1.4                     SummarizedExperiment_1.34.0    \n## [25] Biobase_2.64.0                  GenomicRanges_1.56.0            GenomeInfoDb_1.40.0             IRanges_2.38.0                  S4Vectors_0.42.0                BiocGenerics_0.50.0            \n## [31] MatrixGenerics_1.16.0           matrixStats_1.3.0               SpiecEasi_1.1.3                 CovTools_0.5.4                 \n## \n## loaded via a namespace (and not attached):\n##   [1] minpack.lm_1.2-4        rpart_4.1.23            lifecycle_1.0.4         Rdpack_2.6              edgeR_4.2.0             doParallel_1.0.17       insight_0.20.1          magrittr_2.0.3         \n##   [9] limma_3.60.2            sass_0.4.9              rmarkdown_2.27          jquerylib_0.1.4         yaml_2.3.8              RColorBrewer_1.1-3      ADGofTest_0.3           abind_1.4-5            \n##  [17] zlibbioc_1.50.0         expm_0.999-9            quadprog_1.5-8          pspline_1.0-20          kde1d_1.0.7             rgl_1.3.1               yulab.utils_0.1.4       pracma_2.4.4           \n##  [25] GenomeInfoDbData_1.2.12 ggrepel_0.9.5           tidytree_0.4.6          ellipse_0.5.0           RSpectra_0.16-1         svglite_2.1.3           codetools_0.2-20        DelayedArray_0.30.1    \n##  [33] shapes_1.2.7            tidyselect_1.2.1        shape_1.4.6.1           UCSC.utils_1.0.0        farver_2.1.2            randtoolbox_2.0.4       base64enc_0.1-3         jsonlite_1.8.8         \n##  [41] Formula_1.2-5           survival_3.7-0          iterators_1.0.14        systemfonts_1.1.0       foreach_1.5.2           tools_4.4.0             progress_1.2.3          treeio_1.28.0          \n##  [49] ragg_1.3.2              Rcpp_1.0.12             rARPACK_0.11-0          gridExtra_2.3           SparseArray_1.4.8       xfun_0.44               distributional_0.4.0    withr_3.0.0            \n##  [57] numDeriv_2016.8-1.1     fastmap_1.2.0           fansi_1.0.6             digest_0.6.35           R6_2.5.1                textshaping_0.4.0       colorspace_2.1-0        inum_1.0-5             \n##  [65] copula_1.1-3            flare_1.7.0.1           utf8_1.2.4              generics_0.1.3          corpcor_1.6.10          prettyunits_1.2.0       pulsar_0.3.11           httr_1.4.7             \n##  [73] htmlwidgets_1.6.4       S4Arrays_1.4.1          scatterplot3d_0.3-44    rngWELL_0.10-9          pkgconfig_2.0.3         geigen_2.3              gtable_0.3.5            pcaPP_2.0-4            \n##  [81] htmltools_0.5.8.1       bookdown_0.39.1         scales_1.3.0            SHT_0.1.8               knitr_1.47              rstudioapi_0.16.0       reshape2_1.4.4          nlme_3.1-164           \n##  [89] cachem_1.1.0            stringr_1.5.1           libcoin_1.0-10          pillar_1.9.0            grid_4.4.0              vctrs_0.6.5             VGAM_1.1-11             huge_1.3.5             \n##  [97] gamlss.dist_6.1-1       evaluate_0.23           mvtnorm_1.2-5           cli_3.6.3               locfit_1.5-9.9          compiler_4.4.0          rlang_1.1.4             crayon_1.5.3           \n## [105] labeling_0.4.3          plyr_1.8.9              fs_1.6.4                stringi_1.8.4           BiocParallel_1.38.0     nnls_1.5                assertthat_0.2.1        rvinecopulib_0.6.3.1.1 \n## [113] munsell_0.5.1           gsl_2.1-8               lazyeval_0.2.2          glmnet_4.1-8            Matrix_1.7-0            hms_1.1.3               stabledist_0.7-1        statmod_1.5.0          \n## [121] highr_0.11              rbibutils_2.2.16        partykit_1.2-20         igraph_2.0.3            memoise_2.0.1           bslib_0.7.0.9000        ape_5.8"},{"path":"microbiome-networks.html","id":"microbiome-networks","chapter":"4 Microbiome Networks","heading":"4 Microbiome Networks","text":"Unlike human social networks, simple way observe microbe-microbe\ninteractions – make indirect evidence. One approach uses\npopulation profiles proxy ecological interaction. Taxa often\nco-occur understood cooperative ecological interactions, \ndon’t thought compete niche.Many algorithms designed around intuition, trying go\nbeyond simple co-occurrence instead capture complex types \ndependence. challenge practice ’s hard know method \nuse , since problem unsupervised. Even thorough simulation\nbenchmarking studies available, ’s often obvious well \nsimulation setups match problems interest.","code":""},{"path":"microbiome-networks.html","id":"estimation-1","chapter":"4 Microbiome Networks","heading":"4.1 Estimation","text":"Let’s use simulation benchmark network estimation methods using data \nrounds 1 2 American Gut\nProject. \nsimulate data known correlation structure taxa-level marginals\nestimated study data. block reads data.’ve estimated zero-inflated negative binomial location-shape-scale\n(ZINBLSS) models taxon, using gaussian copula capture\ndependence. used regression formula ~log(sequencing_depth) + BMI.\ndata structure captures simulator components, can swap\npieces modify form simulator. example, \nwanted, mutate family link function associated \nparticular features.simulated data always SummarizedExperiment. means \nworkflow applied original data can applied simulated one\nwithout changes. Notice also sample defaults drawing samples \ndesign original input experiment (’ll modify using \nnew_data argument minute).","code":"\ndata(amgut)\namgut## class: SummarizedExperiment \n## dim: 45 261 \n## metadata(0):\n## assays(1): counts\n## rownames(45): 326792 181016 ... 364563 301645\n## rowData names(0):\n## colnames(261): 000001879.1076223 000002437.1076448 ... 000002656.1076186 000001582.1076447\n## colData names(167): X.SampleID BarcodeSequence ... Description sequencing_depth\nsim <- setup_simulator(\n  amgut,\n  ~ log(sequencing_depth) + BMI,\n  ~ ZINBLSS()\n) |>\n  estimate(mstop = 100)\nsim## [Marginals]\n## Plan:\n## # A tibble: 6 × 3\n##     feature              family                         link\n##   <gene_id>             <distn>                       <link>\n## 1    326792 ZINBI [mu,sigma,nu] ~log(sequencing_depth) + BMI\n## 2    181016 ZINBI [mu,sigma,nu] ~log(sequencing_depth) + BMI\n## 3    191687 ZINBI [mu,sigma,nu] ~log(sequencing_depth) + BMI\n## 4    326977 ZINBI [mu,sigma,nu] ~log(sequencing_depth) + BMI\n## 5    194648 ZINBI [mu,sigma,nu] ~log(sequencing_depth) + BMI\n## 6    541301 ZINBI [mu,sigma,nu] ~log(sequencing_depth) + BMI\n## \n## Estimates:\n## # A tibble: 3 × 2\n##   feature fit       \n##   <chr>   <list>    \n## 1 326792  <glmbsLSS>\n## 2 181016  <glmbsLSS>\n## 3 191687  <glmbsLSS>\n## ... and 42 additional features.\n## \n## [Dependence]\n## 1 normalCopula with 45 features\n## \n## [Template Data]\n## class: SummarizedExperiment \n## dim: 45 261 \n## metadata(0):\n## assays(1): counts\n## rownames(45): 326792 181016 ... 364563 301645\n## rowData names(0):\n## colnames(261): 000001879.1076223 000002437.1076448 ... 000002656.1076186 000001582.1076447\n## colData names(167): X.SampleID BarcodeSequence ... Description sequencing_depth\nsimulated <- sample(sim)\nsimulated## class: SummarizedExperiment \n## dim: 45 261 \n## metadata(0):\n## assays(1): counts_1\n## rownames(45): 326792 181016 ... 364563 301645\n## rowData names(0):\n## colnames(261): 000001879.1076223 000002437.1076448 ... 000002656.1076186 000001582.1076447\n## colData names(167): X.SampleID BarcodeSequence ... Description sequencing_depth"},{"path":"microbiome-networks.html","id":"evaluation-1","chapter":"4 Microbiome Networks","heading":"4.2 Evaluation","text":"Let’s compare marginal count distributions real simulated data.\n’ll need data “long” format able make ggplot2 figure. \npivot_experiment helper can transform original SummarizedExperiment\nobjects way. Notice simulated data tends overestimate \nnumber zeros high-abundance taxa. refine simulator, \nprobably replace zero-inflated negative binomial ordinary negative\nbinomials poorly fitted taxa.learned relationships BMI plausible? can compare scatterplots \nreal simulated data variable. Note , default, \nribbons evaluated along variables, makes jagged\nribbons (neighboring values BMI might different sequencing depth,\npotentially leading quite different predictions). remove artifact, \ncan assume samples exactly sequencing depth.next visualize correlation matrix estimated simulator’s copula\nmodel. pairs taxa highly correlated, \nalso taxa seem higher correlation across large number\ntaxa (e.g., taxon row 34). obvious banding block\nstructure real data, though.pair one high positive correlation. can replace\nselection commented line see one anticorrelated\npairs taxa looks like.","code":"\nbind_rows(\n  real = pivot_experiment(amgut),\n  simulated = pivot_experiment(simulated),\n  .id = \"source\"\n) |>\n  filter(feature %in% rownames(simulated)[1:20]) |>\n  ggplot() +\n  geom_histogram(\n    aes(log(1 + value), fill = source),\n    position = \"identity\", alpha = 0.8\n  ) +\n  facet_wrap(~ reorder(feature, value), scales = \"free\")\nnew_data <- colData(amgut) |>\n  as_tibble() |>\n  mutate(sequencing_depth = 2e4)\nplot(sim, \"BMI\", sample(sim, new_data = new_data), new_data = new_data)\nrho <- copula_parameters(sim)\nheatmap(rho)\n# taxa <- rownames(amgut)[c(33, 43)]\ntaxa <- rownames(amgut)[c(14, 25)]\npivot_experiment(amgut) |>\n  filter(feature %in% taxa) |>\n  pivot_wider(names_from = feature) |>\n  ggplot() +\n  geom_point(aes(log(1 + .data[[taxa[1]]]), log(1 + .data[[taxa[2]]])))"},{"path":"microbiome-networks.html","id":"block-covariance","chapter":"4 Microbiome Networks","heading":"4.3 Block Covariance","text":"Let’s replace current copula correlation structure one block\ndiagonal matrix. example, -diagonal correlations 0.6. can\nuse mutate_correlation swap new correlation matrix earlier\nsimulator.Let’s first look SpiecEasi covariance estimate. variant \ngraphical lasso designed well-adapted microbiome data. good\nnews warn default choices \\(\\lambda\\) large,\ncorrect case. Unfortunately, took get \nanswer, already quite generous allowing fit 10 choices\n\\(\\lambda\\).Let’s instead use Ledoit-Wolf estimator log-transformed data. \nresults make much sense.Since color comparisons difficult evaluate precisely, can also make \nscatterplot comparing different covariance estimators.","code":"\nrho <- c(0.4, .6, 0.8) |>\n  map(~ matrix(., nrow = 15, ncol = 15)) |>\n  Matrix::bdiag() |>\n  as.matrix()\ndiag(rho) <- 1\n\nsimulated <- sim |>\n  mutate_correlation(rho) |>\n  sample()\n\nx <- t(assay(simulated))\nrho_se <- spiec.easi(x, nlambda = 10, pulsar.params = list(rep.num = 1)) |>\n  getOptCov() |>\n  as.matrix() |>\n  cov2cor()\nheatmap(rho_se)\nrho_lw <- CovEst.2003LW(log(1 + x))$S |>\n  cov2cor()\nheatmap(rho_lw)\ndata.frame(truth = c(rho), se = c(rho_se), lw = c(rho_lw)) |>\n  pivot_longer(-truth, values_to = \"estimate\") |>\n  ggplot() +\n  geom_jitter(aes(truth, estimate, col = name), alpha = 0.6, size = 0.4) +\n  geom_abline(slope = 1) +\n  facet_wrap(~name)"},{"path":"microbiome-networks.html","id":"generalization","chapter":"4 Microbiome Networks","heading":"4.4 Generalization","text":"network structures? can use logic evaluate\nseveral network regimes. example, block defines correlation\nmatrices associated scale-free banded structures.example shows , start real template data, ’s \nhard setup benchmarking experiment. ’s generally easier reconfigure\ncomponents existing simulator specify simulation\nsteps scratch. secondary bonus data tend look\nclose real data interest, least deliberate transformations\nneeded establish ground truth.imagine extending example include different data properties\n(sample sizes, variable block sizes correlations, general correlation\nstructure) estimation strategies (alternative transformations \nestimators). Design changes implemented using expand_colData, changes\nsignal can specified mutate_correlation, \nworkflow can used long applies SummarizedExperiment object.","code":"\ndata(example_rho)\nrho_hat <- list()\nfor (r in seq_along(example_rho)) {\n  x <- sim |>\n    mutate_correlation(example_rho[[r]]) |>\n    scDesigner::sample() |>\n    assay()\n\n  rho_se <- spiec.easi(t(x), nlambda = 10, pulsar.params = list(rep.num = 1)) |>\n    getOptCov() |>\n    as.matrix() |>\n    cov2cor()\n  rho_lw <- CovEst.2003LW(log(1 + t(x)))$S |>\n    cov2cor()\n  rho_hat[[names(example_rho)[r]]] <- list(se = rho_se, lw = rho_lw)\n}"},{"path":"batch-effect-correction.html","id":"batch-effect-correction","chapter":"5 Batch Effect Correction","heading":"5 Batch Effect Correction","text":"Integration can subtle exercise. need balance interest seeing\nsimilarities datasets risk making things seem similar\nreally . Simulation can help navigate subtlety letting us\nsee integration methods behave situations know exactly \ndifferent datasets related. note illustrate perspective\nshowing simulation can help horizontal (across batches) \nvertical (across assays) integration. ’ll brief interlude map\nfunction purrr, helpful concisely writing code \notherwise need loops (e.g., batches assays).","code":""},{"path":"batch-effect-correction.html","id":"anaerobic-digestion-data","chapter":"5 Batch Effect Correction","heading":"5.1 Anaerobic Digestion Data","text":"example simultaneously analyzing several batches dataset\nefficiency anaerobic digestion (AD) organic matter. \nessential problem , study, samples collected\nsimultaneously. Small differences across separate runs lead systematic\ndifferences resulting data, can obfuscate interesting\n-group variation experiment intended uncover. \nexample, AD dataset, date sequencing run global effect\nmeasured community composition, can see right away principal\ncomponents plot:can learn general microbiome batch effect integration problem\n(Wang Le Cao, 2020), \ndataset example batch effect correction code comes . \narticle also reviews mechanisms lead batch effects microbiome\ndata, together methods removing effects situations within\nappropriate.batch effect correction, ’s important remove much batch\nvariation possible without accidentally also removing real biological\nvariation present even samples \nsequenced together. sometimes called ``overintegration,’’ \nespecially high risk real biological variation quite subtle,\ne.g., rare cell type one similar prominent one.\nSimulation can help us gauge extent different methods may may\noverintegrate. Since get control -batch \n-biological-condition differences, can see extent \nintegration methods can remove former preserving latter.","code":"\ndata(anaerobic)\npca_batch(anaerobic, facet = FALSE) +\n  scale_color_manual(values = c(\"#191C59\", \"#bc0c3c\")) +\n  labs(\n    col = \"Treatment\",\n    shape = \"Batch\",\n    x = \"PC1 [25.2% Variance Explained]\",\n    y = \"PC2 [16.2% Varianced Explained]\"\n  )"},{"path":"batch-effect-correction.html","id":"simulation-design","chapter":"5 Batch Effect Correction","heading":"5.2 Simulation Design","text":"block estimates candidate simulator. using formula ~ batch + treatment, ’re allowing taxon-wise differences due batch \ntreatment. Note principle, estimate interaction \nbatch treatment (treatment appear stronger batches \nothers). encourage try estimating model; however, visually\nanalyzing output suggests full model tendancy overfit.\nSince data already centered log-ratio transformed, can try \nGaussian marginal model. AD dataset relatively samples\ncompared number features, ’ll use copula ’s designed \nsetting.can simulate fitted model evaluate quality fit using\ncontrast_boxplot. light wrapper ggplot2 code used \ncompare experiments first session, can read definition\n.Exercise Propose create least one visualization can \nused compare contrast simulator real data. conclusions can\ndraw?Solution: many possible answers:Boxplots across taxa different overall abundance levels.Analogous histograms CDF plots, show entire distributions, rather just summarized quantiles.Pair scatterplots, see well bivariate relationships taxa preserved.Dimensionality reduction simulated data, see well matches global structure original data.’ll implement last idea using PCA. contrasted PCA\nplot original data . ’s okay plot seems rotated relative \noiginal plot – PCA unique rotation. main characteristic\n’re looking relative sizes batch treatment effects\nseem reasonaly well-preserved, since types effects \nlater batch effect integration methods must able distinguish.study risk overintegration, let’s imagine third\ntreatment group relatively fewer samples. type group \ncorrection method might accidentally blend rest, ’s \naggressive. ’ve defined imaginary experiment using data.frame .\ntreatment level 1.8 new one. ’ve supposed 1 -\n3 technical replicates (extraction) biological sample (sample), \nbatch dates .can simulate new design look different new treatment\ngroup seems others. ’s subtle effect, definitely smaller \nbatch effect, also separate enough able preserve .","code":"\nsimulator <- setup_simulator(\n  anaerobic,\n  ~ batch + treatment,\n  ~ GaussianLSS(),\n  copula = copula_adaptive(thr = .1)\n) |>\n  estimate(nu = 0.05, mstop = 100) # lower nu -> stable training\nanaerobic_sim <- sample(simulator)\ncontrast_boxplot(anaerobic, anaerobic_sim)\npca_batch(anaerobic_sim)\ndata(imaginary_design)\nsummary(imaginary_design)##    extraction        batch      treatment           rep           sample   \n##  Min.   :1    09/04/2015:36   Min.   :0.0000   Min.   :1.00   1      :  2  \n##  1st Qu.:1    14/04/2016:36   1st Qu.:0.0000   1st Qu.:1.75   2      :  2  \n##  Median :2    01/07/2016:36   Median :1.0000   Median :2.50   3      :  2  \n##  Mean   :2    14/11/2016:36   Mean   :0.7167   Mean   :2.75   4      :  2  \n##  3rd Qu.:3    21/09/2017:36   3rd Qu.:1.0000   3rd Qu.:4.00   5      :  2  \n##  Max.   :3                    Max.   :1.8000   Max.   :5.00   6      :  2  \n##                                                               (Other):168\np <- list()\nanaerobic_sim <- sample(simulator, new_data = imaginary_design)\np[[\"sim\"]] <- pca_batch(anaerobic_sim)"},{"path":"batch-effect-correction.html","id":"benchmarking","chapter":"5 Batch Effect Correction","heading":"5.3 Benchmarking","text":"’ve defined batch_correct wrapper function implements either \nRUV-III ComBat batch effect correction methods. outputs contrasted\nPCAs . looks like ComBat might somewhat aggressive,\ncausing 1 1.8 treatment groups substantially overlap, RUV\nbit conservative, keeping treatment groups nicely separate. \naside, note conclusion can depend number replicates \ntotal number samples available. ’ve included code generating \nimaginary_design data.frame vignette\nMIGsim package. Can find settings lead either method astray?","code":"\np[[\"ruv\"]] <- pca_batch(batch_correct(anaerobic_sim, \"ruv\"))\np[[\"combat\"]] <- pca_batch(batch_correct(anaerobic_sim, \"combat\"))\nprediction_errors <- function(df) {\n  y_hat <- predict(lda(treatment ~ PC1 + PC2, data = df), type = \"response\")$class\n  table(df$treatment, y_hat)\n}\n\nmap(p, ~ prediction_errors(.$data))## $sim\n##      y_hat\n##        0  1 1.8\n##   0   62 13   0\n##   1   15 56   4\n##   1.8  1 14  15\n## \n## $ruv\n##      y_hat\n##        0  1 1.8\n##   0   70  5   0\n##   1    2 67   6\n##   1.8  0  8  22\n## \n## $combat\n##      y_hat\n##        0  1 1.8\n##   0   65 10   0\n##   1   12 59   4\n##   1.8  1 12  17\nsessionInfo()## R version 4.4.0 (2024-04-24)\n## Platform: aarch64-apple-darwin20\n## Running under: macOS Ventura 13.4\n## \n## Matrix products: default\n## BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib \n## LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0\n## \n## locale:\n## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n## \n## time zone: America/Chicago\n## tzcode source: internal\n## \n## attached base packages:\n##  [1] splines   parallel  stats4    stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n##  [1] TreeSummarizedExperiment_2.12.0 Biostrings_2.72.1               XVector_0.44.0                  SingleCellExperiment_1.26.0     scDesigner_0.0.0.9000           purrr_1.0.2                    \n##  [7] MIGsim_0.0.0.9000               tidyr_1.3.1                     tibble_3.2.1                    scico_1.5.0                     pwr_1.3-0                       patchwork_1.2.0                \n## [13] mixOmics_6.28.0                 lattice_0.22-6                  MASS_7.3-60.2                   glue_1.7.0                      ggplot2_3.5.1                   ggdist_3.3.2                   \n## [19] gamboostLSS_2.0-7               mboost_2.9-10                   stabs_0.6-4                     forcats_1.0.0                   dplyr_1.1.4                     SummarizedExperiment_1.34.0    \n## [25] Biobase_2.64.0                  GenomicRanges_1.56.0            GenomeInfoDb_1.40.0             IRanges_2.38.0                  S4Vectors_0.42.0                BiocGenerics_0.50.0            \n## [31] MatrixGenerics_1.16.0           matrixStats_1.3.0               SpiecEasi_1.1.3                 CovTools_0.5.4                 \n## \n## loaded via a namespace (and not attached):\n##   [1] minpack.lm_1.2-4        XML_3.99-0.16.1         rpart_4.1.23            lifecycle_1.0.4         Rdpack_2.6              edgeR_4.2.0             doParallel_1.0.17       insight_0.20.1         \n##   [9] magrittr_2.0.3          limma_3.60.2            sass_0.4.9              rmarkdown_2.27          jquerylib_0.1.4         yaml_2.3.8              DBI_1.2.3               RColorBrewer_1.1-3     \n##  [17] ADGofTest_0.3           abind_1.4-5             zlibbioc_1.50.0         expm_0.999-9            quadprog_1.5-8          pspline_1.0-20          kde1d_1.0.7             rgl_1.3.1              \n##  [25] yulab.utils_0.1.4       pracma_2.4.4            sva_3.50.0              GenomeInfoDbData_1.2.12 ggrepel_0.9.5           tidytree_0.4.6          genefilter_1.86.0       ellipse_0.5.0          \n##  [33] RSpectra_0.16-1         annotate_1.82.0         svglite_2.1.3           codetools_0.2-20        DelayedArray_0.30.1     shapes_1.2.7            tidyselect_1.2.1        shape_1.4.6.1          \n##  [41] UCSC.utils_1.0.0        farver_2.1.2            randtoolbox_2.0.4       base64enc_0.1-3         jsonlite_1.8.8          Formula_1.2-5           survival_3.7-0          iterators_1.0.14       \n##  [49] systemfonts_1.1.0       foreach_1.5.2           tools_4.4.0             progress_1.2.3          treeio_1.28.0           ragg_1.3.2              Rcpp_1.0.12             rARPACK_0.11-0         \n##  [57] gridExtra_2.3           SparseArray_1.4.8       mgcv_1.9-1              xfun_0.44               distributional_0.4.0    withr_3.0.0             numDeriv_2016.8-1.1     fastmap_1.2.0          \n##  [65] fansi_1.0.6             digest_0.6.35           R6_2.5.1                textshaping_0.4.0       colorspace_2.1-0        RSQLite_2.3.7           inum_1.0-5              copula_1.1-3           \n##  [73] flare_1.7.0.1           utf8_1.2.4              generics_0.1.3          corpcor_1.6.10          prettyunits_1.2.0       pulsar_0.3.11           httr_1.4.7              htmlwidgets_1.6.4      \n##  [81] S4Arrays_1.4.1          scatterplot3d_0.3-44    rngWELL_0.10-9          pkgconfig_2.0.3         geigen_2.3              gtable_0.3.5            blob_1.2.4              pcaPP_2.0-4            \n##  [89] htmltools_0.5.8.1       bookdown_0.39.1         ruv_0.9.7.1             scales_1.3.0            SHT_0.1.8               png_0.1-8               knitr_1.47              rstudioapi_0.16.0      \n##  [97] reshape2_1.4.4          nlme_3.1-164            cachem_1.1.0            stringr_1.5.1           libcoin_1.0-10          AnnotationDbi_1.66.0    pillar_1.9.0            grid_4.4.0             \n## [105] vctrs_0.6.5             VGAM_1.1-11             huge_1.3.5              xtable_1.8-4            gamlss.dist_6.1-1       evaluate_0.23           mvtnorm_1.2-5           cli_3.6.3              \n## [113] locfit_1.5-9.9          compiler_4.4.0          rlang_1.1.4             crayon_1.5.3            labeling_0.4.3          plyr_1.8.9              fs_1.6.4                stringi_1.8.4          \n## [121] BiocParallel_1.38.0     nnls_1.5                assertthat_0.2.1        rvinecopulib_0.6.3.1.1  munsell_0.5.1           gsl_2.1-8               lazyeval_0.2.2          glmnet_4.1-8           \n## [129] Matrix_1.7-0            hms_1.1.3               stabledist_0.7-1        bit64_4.0.5             KEGGREST_1.44.0         statmod_1.5.0           highr_0.11              rbibutils_2.2.16       \n## [137] partykit_1.2-20         igraph_2.0.3            memoise_2.0.1           bslib_0.7.0.9000        bit_4.0.5               ape_5.8"},{"path":"vertical-integration.html","id":"vertical-integration","chapter":"6 Vertical Integration","heading":"6 Vertical Integration","text":"horizontal integration, many datasets, features.\ndiffer gathered different times. contrast, \nvertical integration, instead many datasets samples.\ndiffer measure different aspects samples. goal \nsituation remove differences across datasets, like \nhorizontal integration, instead clarify relationships across sources.One important question often arises vertical integration – \ndata even alignable? , effort look relationships across\ndatasets, might accidentally miss interesting variation exists\nwithin individual assays. technologies measuring different\nthings, might better simply analyzing data separately. help us\ngauge setting might , can simulate data know \nshouldn’t align sources. integration methods giving similar\noutputs give simulated data, cautious.ways dataset might ``alignable.’’ \ngeneral reason may latent sources variation common\nsources. simpler reason something influenced one\nassay substantially (e.g., disease state) might influence much.\nLet’s see integration method might work setting.","code":""},{"path":"vertical-integration.html","id":"icu-dataset","chapter":"6 Vertical Integration","heading":"6.1 ICU Dataset","text":"’ll work ICU sepsis dataset previously studied Haak et al.\n(2021) documented within \nvignette\nMOFA package. three datasets 16S bacterial, fungal, \nVirome assays, applied different healthy sepsis patient populations.\nMoreover, participants course antibiotics others \n. question either sepsis, antibiotics, interaction\naffects microbiome viewed three assays. data printed\n, already filtered CLR transformed following MOFA\nvignette.can simultaneously analyze data sources using block sPLS-DA. \nmulti-assay version analysis saw previous session.\nexper_splsda light wrapper mixOmics function call, \ncan read\n.\noutput plot shows assay differs across groups, \nquantitatively summarized high estimated weights category\nestimated PLS directions.","code":"\ndata(icu)\nicu## $Bacteria\n## class: SummarizedExperiment \n## dim: 180 57 \n## metadata(0):\n## assays(1): clr\n## rownames(180): Acidaminococcus Actinomyces ... Veillonellaceae Weissella\n## rowData names(0):\n## colnames(57): TKI_F1 TKI_F10 ... TKI_F8 TKI_F9\n## colData names(16): Age Sexs ... Propionate Butyrate\n## \n## $Fungi\n## class: SummarizedExperiment \n## dim: 18 57 \n## metadata(0):\n## assays(1): clr\n## rownames(18): Agaricus Aspergillus ... Sclerotiniaceae Vishniacozyma\n## rowData names(0):\n## colnames(57): TKI_F1 TKI_F10 ... TKI_F8 TKI_F9\n## colData names(16): Age Sexs ... Propionate Butyrate\n## \n## $Viruses\n## class: SummarizedExperiment \n## dim: 42 57 \n## metadata(0):\n## assays(1): clr\n## rownames(42): Acidovorax phage Acinetobacter phage ... Streptomyces phage Vibrio phage\n## rowData names(0):\n## colnames(57): TKI_F1 TKI_F10 ... TKI_F8 TKI_F9\n## colData names(16): Age Sexs ... Propionate Butyrate\nfit <- exper_splsda(icu)\nplotIndiv(fit)\nfit$weights##              comp1     comp2\n## Bacteria 0.8580402 0.8191458\n## Fungi    0.6513668 0.4845247\n## Viruses  0.6118091 0.8047067"},{"path":"vertical-integration.html","id":"interlude-using-map","chapter":"6 Vertical Integration","heading":"6.2 Interlude: Using map","text":"examples , ’ll find helpful use function map \npurrr package. function gives one-line replacement simple -loops;\nanalogous list comprehensions python. can useful many places\nbesides topic tutorial. example, want convert \nvector c(1, 2, 3) c(1, 4, 9), can use map:~ notation shorthand defining function, . represents\ncurrent vector element. generally, can apply map lists. \nline update list 1 added element.Exercise: test understanding, can write map computes \n*mean \nvector list x ? mean 10 smallest elements?","code":"\nmap(1:3, ~ .^2)## [[1]]\n## [1] 1\n## \n## [[2]]\n## [1] 4\n## \n## [[3]]\n## [1] 9\nmap(list(a = 1, b = 2, c = 3), ~ . + 1)## $a\n## [1] 2\n## \n## $b\n## [1] 3\n## \n## $c\n## [1] 4\nx <- list(a = rnorm(100), b = rnorm(100, 1))\nmap(x, mean)## $a\n## [1] 0.1177328\n## \n## $b\n## [1] 1.128995\nmap(x, ~ mean(sort(.)[1:10]))## $a\n## [1] -1.920247\n## \n## $b\n## [1] -0.8639795"},{"path":"vertical-integration.html","id":"simulation-question","chapter":"6 Vertical Integration","heading":"6.3 Simulation Question","text":"output looked 16S community composition \nrelated disease antibiotics groups? Since integrative analysis prioritizes\nsimilarities across sources, expect mask real differences\nfungal virus data well. can use simulation gauge extent\nmasking.first step train simulator. ’re just learning four different\nsetes parameters four observed groups. nuanced\nlearning separate effects sepsis antibiotics, enough\nillustration. used map estimate simulator assay \nicu list.far, haven’t tried removing relationships present 16S assay,\nindeed integrative analysis output simulated data looks\ncomparable original study.Exercise: Modify simulator 16S group longer depends\ndisease cateogry. allow us study integrative analysis\noutput changes data alignable.Solution: need define new link longer depends Category. One solution\nmodify existing simulator place using mutate.Since modifying taxa, simpler solution just define \nnew simulator scratch.","code":"\nsimulator <- map(\n  icu,\n  ~ setup_simulator(., ~Category, ~ GaussianLSS()) |>\n    estimate(nu = 0.05)\n)\nicu_sim <- join_copula(simulator, copula_adaptive()) |>\n  sample() |>\n  split_assays()\n\nfit_sim <- exper_splsda(icu_sim)\nplotIndiv(fit_sim)\nfit$weights##              comp1     comp2\n## Bacteria 0.8580402 0.8191458\n## Fungi    0.6513668 0.4845247\n## Viruses  0.6118091 0.8047067\nnull_simulator <- simulator\n# fill this in\n# null_simulator[[1]] <- ???\nnull_simulator[[1]] <- simulator[[1]] |>\n  mutate(1:180, link = ~1) |>\n  estimate(nu = 0.05)\nnull_simulator[[1]] <- setup_simulator(icu[[1]], ~1, ~ GaussianLSS()) |>\n  estimate(nu = 0.05)"},{"path":"vertical-integration.html","id":"simulation-results","chapter":"6 Vertical Integration","heading":"6.4 Simulation Results","text":"can rerun integrative analysis using modified simulator. Somewhat\nsurprisingly, disease association bacteria group hasn’t erased.\nartifact integration. assays associations \ndisease group, since method encourages outputs across tables \nconsistent one another, artificially introduced structure \nbacteria visualization (even quite weak.) Nonetheless, still\nobserve large dropoff weight bacterial table. , seems\nminor deterioration group separations fungal virus\ncommunities, component weights higher work \nfungal virus assays. Altogether, suggests may want check\ntable-level associations response variable, especially \nintegration outputs ambiguous. case, might able increase\npower focusing class-associated assays. Nonetheless, block\nsPLS-DA also seems relatively robust – considering dramatic change \nmicrobiome table, output remaining tables still surfaces interesting\nrelationships.","code":"\nicu_sim <- join_copula(null_simulator, copula_adaptive()) |>\n  sample() |>\n  split_assays()\nfit_null <- exper_splsda(icu_sim)\nplotIndiv(fit)\nfit_null$weights##              comp1     comp2\n## Bacteria 0.6658170 0.6571177\n## Fungi    0.7479665 0.6797712\n## Viruses  0.7015960 0.7929047"},{"path":"vertical-integration.html","id":"alignability","chapter":"6 Vertical Integration","heading":"6.5 Alignability","text":"canonical correlations compare real data reference\nnull? First, can compute CCA canonical correlations using real\nBacteria Virus data.Next, define reference null compute canonical correlations ten\nreplicates null. define reference null, zero \ncorrelations across tables. draw 100 samples resulting\ndistribution compute canonical correlations .help later visualization, combine real reference\ncanonical correlations tidy data.frame. visualized hidden\nchunk – want see source code, can review \n.","code":"\nmerged <- simulator[c(1, 3)] |>\n  join_copula(copula_adaptive(thr = 0.01))\n\nxy <- sample(merged) |>\n  assay() |>\n  t()\nix <- map(icu, rownames)\ncca_result <- rcc(xy[, ix[[1]]], xy[, ix[[3]]], method = \"shrinkage\")\nrho_null <- copula_parameters(merged)\ndimnames(rho_null) <- list(colnames(xy), colnames(xy))\nrho_null[ix[[1]], ix[[3]]] <- 0\nrho_null[ix[[3]], ix[[1]]] <- 0\n\nnull_cancor <- merged |>\n  mutate_correlation(rho_null)\n\nB <- 100\ncancors <- list()\nfor (b in seq_len(B)) {\n  xy_null <- sample(null_cancor) |>\n    assay() |>\n    t()\n\n  cancors[[glue(\"sim_{b}\")]] <- rcc(xy_null[, ix[[1]]], xy_null[, ix[[3]]], method = \"shrinkage\")$cor\n}\ncancors[[\"true\"]] <- cca_result$cor\ncontrast_data <- bind_rows(cancors, .id = \"rep\") |>\n  pivot_longer(-rep, names_to = \"loading\") |>\n  mutate(\n    source = grepl(\"true\", rep),\n    loading = as.integer(loading)\n  )\nhead(contrast_data)## # A tibble: 6 × 4\n##   rep   loading value source\n##   <chr>   <int> <dbl> <lgl> \n## 1 sim_1       1 0.913 FALSE \n## 2 sim_1       2 0.880 FALSE \n## 3 sim_1       3 0.848 FALSE \n## 4 sim_1       4 0.826 FALSE \n## 5 sim_1       5 0.815 FALSE \n## 6 sim_1       6 0.797 FALSE\nsessionInfo()## R version 4.4.0 (2024-04-24)\n## Platform: aarch64-apple-darwin20\n## Running under: macOS Ventura 13.4\n## \n## Matrix products: default\n## BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib \n## LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0\n## \n## locale:\n## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n## \n## time zone: America/Chicago\n## tzcode source: internal\n## \n## attached base packages:\n##  [1] splines   parallel  stats4    stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n##  [1] TreeSummarizedExperiment_2.12.0 Biostrings_2.72.1               XVector_0.44.0                  SingleCellExperiment_1.26.0     scDesigner_0.0.0.9000           purrr_1.0.2                    \n##  [7] MIGsim_0.0.0.9000               tidyr_1.3.1                     tibble_3.2.1                    scico_1.5.0                     pwr_1.3-0                       patchwork_1.2.0                \n## [13] mixOmics_6.28.0                 lattice_0.22-6                  MASS_7.3-60.2                   glue_1.7.0                      ggplot2_3.5.1                   ggdist_3.3.2                   \n## [19] gamboostLSS_2.0-7               mboost_2.9-10                   stabs_0.6-4                     forcats_1.0.0                   dplyr_1.1.4                     SummarizedExperiment_1.34.0    \n## [25] Biobase_2.64.0                  GenomicRanges_1.56.0            GenomeInfoDb_1.40.0             IRanges_2.38.0                  S4Vectors_0.42.0                BiocGenerics_0.50.0            \n## [31] MatrixGenerics_1.16.0           matrixStats_1.3.0               SpiecEasi_1.1.3                 CovTools_0.5.4                 \n## \n## loaded via a namespace (and not attached):\n##   [1] minpack.lm_1.2-4            XML_3.99-0.16.1             rpart_4.1.23                lifecycle_1.0.4             Rdpack_2.6                  edgeR_4.2.0                 doParallel_1.0.17          \n##   [8] MultiAssayExperiment_1.30.2 insight_0.20.1              magrittr_2.0.3              limma_3.60.2                sass_0.4.9                  rmarkdown_2.27              jquerylib_0.1.4            \n##  [15] yaml_2.3.8                  DBI_1.2.3                   RColorBrewer_1.1-3          ADGofTest_0.3               abind_1.4-5                 zlibbioc_1.50.0             expm_0.999-9               \n##  [22] quadprog_1.5-8              pspline_1.0-20              kde1d_1.0.7                 rgl_1.3.1                   yulab.utils_0.1.4           pracma_2.4.4                sva_3.50.0                 \n##  [29] GenomeInfoDbData_1.2.12     ggrepel_0.9.5               tidytree_0.4.6              genefilter_1.86.0           ellipse_0.5.0               RSpectra_0.16-1             annotate_1.82.0            \n##  [36] svglite_2.1.3               codetools_0.2-20            DelayedArray_0.30.1         shapes_1.2.7                tidyselect_1.2.1            shape_1.4.6.1               UCSC.utils_1.0.0           \n##  [43] farver_2.1.2                randtoolbox_2.0.4           base64enc_0.1-3             jsonlite_1.8.8              Formula_1.2-5               survival_3.7-0              iterators_1.0.14           \n##  [50] systemfonts_1.1.0           foreach_1.5.2               tools_4.4.0                 progress_1.2.3              treeio_1.28.0               ragg_1.3.2                  Rcpp_1.0.12                \n##  [57] rARPACK_0.11-0              BiocBaseUtils_1.6.0         gridExtra_2.3               SparseArray_1.4.8           mgcv_1.9-1                  xfun_0.44                   distributional_0.4.0       \n##  [64] withr_3.0.0                 numDeriv_2016.8-1.1         fastmap_1.2.0               fansi_1.0.6                 digest_0.6.35               R6_2.5.1                    textshaping_0.4.0          \n##  [71] colorspace_2.1-0            RSQLite_2.3.7               inum_1.0-5                  copula_1.1-3                flare_1.7.0.1               utf8_1.2.4                  generics_0.1.3             \n##  [78] corpcor_1.6.10              prettyunits_1.2.0           pulsar_0.3.11               httr_1.4.7                  htmlwidgets_1.6.4           S4Arrays_1.4.1              scatterplot3d_0.3-44       \n##  [85] rngWELL_0.10-9              pkgconfig_2.0.3             geigen_2.3                  gtable_0.3.5                blob_1.2.4                  pcaPP_2.0-4                 htmltools_0.5.8.1          \n##  [92] bookdown_0.39.1             ruv_0.9.7.1                 scales_1.3.0                SHT_0.1.8                   png_0.1-8                   knitr_1.47                  rstudioapi_0.16.0          \n##  [99] reshape2_1.4.4              nlme_3.1-164                cachem_1.1.0                stringr_1.5.1               libcoin_1.0-10              AnnotationDbi_1.66.0        pillar_1.9.0               \n## [106] grid_4.4.0                  vctrs_0.6.5                 VGAM_1.1-11                 huge_1.3.5                  xtable_1.8-4                gamlss.dist_6.1-1           evaluate_0.23              \n## [113] mvtnorm_1.2-5               cli_3.6.3                   locfit_1.5-9.9              compiler_4.4.0              rlang_1.1.4                 crayon_1.5.3                labeling_0.4.3             \n## [120] plyr_1.8.9                  fs_1.6.4                    stringi_1.8.4               BiocParallel_1.38.0         nnls_1.5                    assertthat_0.2.1            rvinecopulib_0.6.3.1.1     \n## [127] munsell_0.5.1               gsl_2.1-8                   lazyeval_0.2.2              glmnet_4.1-8                Matrix_1.7-0                hms_1.1.3                   stabledist_0.7-1           \n## [134] bit64_4.0.5                 KEGGREST_1.44.0             statmod_1.5.0               highr_0.11                  rbibutils_2.2.16            partykit_1.2-20             igraph_2.0.3               \n## [141] memoise_2.0.1               bslib_0.7.0.9000            bit_4.0.5                   ape_5.8"},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
